<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>โปรไฟล์</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous" />
        

</head>

<body>
    <%- include('./partials/head.ejs') %> 
    <%- include('./partials/nav.ejs') %>
    <%- include('partials/breadcrumb') %>

    <div class="container">
        <div class="box">

            <h2>โปรไฟล์ของผู้ใช้</h2>
            <% if (user) { %>
            <p><strong>ชื่อ :</strong> <%= user.username %></p>
            <!-- เพิ่มการแสดงผล BMI และสถานะของ BMI -->
            <p>
                BMI : 
                <span id="user-bmi"><%= user.bmi ? user.bmi : 'ไม่พบข้อมูล BMI' %></span> 
                <!-- กำหนดให้สถานะ BMI แสดงในบรรทัดเดียวกัน -->
                <span id="bmi-status-profile">
                    <% if (user.bmi) { %>
                        <% if (user.bmi < 18.5) { %>
                            ผอม (น้ำหนักน้อยกว่ามาตรฐาน)
                        <% } else if (user.bmi >= 18.5 && user.bmi < 24.9) { %>
                            ปกติ (น้ำหนักปกติ)
                        <% } else if (user.bmi >= 25 && user.bmi < 29.9) { %>
                            อ้วน (น้ำหนักเกินมาตรฐาน)
                        <% } else { %>
                            โรคอ้วน (น้ำหนักมากกว่ามาตรฐาน)
                        <% } %>
                    <% } else { %>
                        ไม่พบข้อมูลสถานะ BMI
                    <% } %>
                </span>
            </p>
            <% } else { %>
            <p>ไม่พบข้อมูลผู้ใช้</p>
            <% } %>
        </div>

        <div class="box mt-4">
            <h2 class="act_head1 text-center">ตารางการออกกำลังกาย</h2>

            <div id="calendarContainer">
                <!-- เพิ่มปุ่มเลื่อนซ้ายและขวา -->
                <span class="calendar-arrow prev-arrow" onclick="prevMonth()">&#10094;</span>
                <span class="calendar-arrow next-arrow" onclick="nextMonth()">&#10095;</span>

                <!-- Calendar controls with dropdowns -->
                <div id="calendarControls" class="d-flex justify-content-center mb-3">
                    <select id="monthSelect" class="form-select w-auto me-2" onchange="updateCalendar()"></select>
                    <select id="yearSelect" class="form-select w-auto" onchange="updateCalendar()"></select>
                </div>
                <div id="calendar"></div>
            </div>
        </div>

        <div class="box">
            <h1 class="act_head1">BMI</h1>
            <div class="bmi-container">
                <label for="title">Weight :</label>
                <input type="number" id="weight" placeholder="Enter your weight in kg" min="1">
                <label for="title">Height :</label>
                <input type="number" id="height" placeholder="Enter your height in cm" min="1">
                <button onclick="calculateBMI()">Calculate BMI</button>
                <div class="bmi-result" id="bmi-result"></div>
                <div class="bmi-status" id="bmi-status"></div>
            </div>
        </div>

        <div class="box">
            <h1 class="act_head1">Activity to Day</h1>
            <div class="Activity">
                <form action="/blogs" method="POST">
                    <label for="title">Blog Title :</label>
                    <input type="text" id="title" name="title" required placeholder="Enter blog title">
        
                    <label for="content">Blog Content :</label>
                    <textarea id="content" name="content" required placeholder="Write your blog here"></textarea>
        
                    <button type="submit">Submit</button>
                </form>
            </div>
        </div>

        <div class="box">
            <h1 class="act_head1">Your Blogs</h1>
            <div class="blogs">
                <% if (blogs && blogs.length > 0) { %>
                    <% blogs.forEach(blog => { %>
                        <div class="blog">
                            <div class="blog_detail">
                                <div>
                                    <h2><%= blog.title %></h2>
                                    <p class="content"><%= blog.content %></p>
                                    <p class="date"><small>Date : <%= blog.createdAt.toLocaleString() %></small></p>
                                </div>
                                <div>
                                    <a class="edit" href="/blogs/edit/<%= blog._id %>"><button type="button" class="btn btn-warning">Edit</button></a>
                                    <a class="delete" data-id="<%= blog._id %>"><button type="button" class="btn btn-danger">Delete</button></a>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <p class="no-blogs">"ยังไม่มีกิจกรรมของคุณในตอนนี้"</p>
                <% } %>
            </div>
        </div>
    </div>
</div>

<script>
    const delblogs = document.querySelectorAll('a.delete');

    delblogs.forEach(delblog => {
        delblog.addEventListener('click', (e) => {
            e.preventDefault();

            const confirmed = confirm("คุณแน่ใจว่าต้องการลบ Blog นี้หรือไม่?");

            if (confirmed) {
                const endpoint = `/blogs/${delblog.dataset.id}`;

                fetch(endpoint, {
                    method: 'DELETE'
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Network response was not ok");
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.redirect) {
                        window.location.href = data.redirect;
                    } else {
                        delblog.closest('.blog').remove();
                    }
                })
                .catch(err => console.log("Error deleting blog:", err));
            }
        });
    });
</script>

</body>

</html>


<script>
    function calculateBMI() {
    let weight = parseFloat(document.getElementById("weight").value);
    let height = parseFloat(document.getElementById("height").value) / 100; // แปลงหน่วย cm เป็น m
    if (weight && height) {
        let bmi = weight / (height * height);
        bmi = bmi.toFixed(2); // แสดงทศนิยม 2 ตำแหน่ง

        document.getElementById("bmi-result").innerText = `Your BMI: ${bmi}`;

        let status = "";
        if (bmi < 18.5) {
            status = "Underweight (น้ำหนักน้อยกว่ามาตรฐาน)";
        } else if (bmi >= 18.5 && bmi < 24.9) {
            status = "Normal weight (น้ำหนักปกติ)";
        } else if (bmi >= 25 && bmi < 29.9) {
            status = "Overweight (น้ำหนักเกินมาตรฐาน)";
        } else {
            status = "Obese (โรคอ้วน)";
        }
        document.getElementById("bmi-status").innerText = status;

        // ส่งข้อมูล BMI ไปยังเซิร์ฟเวอร์เพื่อบันทึก
        fetch("/save-bmi", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                userId: "<%= user._id %>", // ใช้ userId ที่แท้จริงจากข้อมูลผู้ใช้
                bmi: bmi,
            }),
        })
            .then((response) => response.json())
            .then((data) => {
                if (data.success) {
                    console.log("BMI saved successfully");
                    // อัปเดตค่า BMI ที่แสดงในหน้าโปรไฟล์
                    document.getElementById("user-bmi").innerText = bmi;

                    // อัปเดตสถานะ BMI ในโปรไฟล์
                    document.getElementById("bmi-status-profile").innerText = status;
                } else {
                    console.error("Error saving BMI:", data.message);
                }
            })
            .catch((error) => {
                console.error("Error:", error);
            });
    } else {
        document.getElementById("bmi-result").innerText =
            "Please enter valid weight and height!";
        document.getElementById("bmi-status").innerText = "";
    }
}


    // Global variable to store the current month and year
    let currentYear = new Date().getFullYear();
    let currentMonth = new Date().getMonth();

    function generateCalendar(year, month) {
        const calendar = document.getElementById("calendar");
        calendar.innerHTML = ""; // Clear previous calendar

        const monthNames = [
            "มกราคม",
            "กุมภาพันธ์",
            "มีนาคม",
            "เมษายน",
            "พฤษภาคม",
            "มิถุนายน",
            "กรกฎาคม",
            "สิงหาคม",
            "กันยายน",
            "ตุลาคม",
            "พฤศจิกายน",
            "ธันวาคม",
        ];

        const table = document.createElement("table");
        table.classList.add("table", "table-bordered");

        const headerRow = document.createElement("tr");
        const days = [
            "อาทิตย์",
            "จันทร์",
            "อังคาร",
            "พุธ",
            "พฤหัสบดี",
            "ศุกร์",
            "เสาร์",
        ];
        days.forEach((day) => {
            const th = document.createElement("th");
            th.textContent = day;
            headerRow.appendChild(th);
        });
        table.appendChild(headerRow);

        const firstDay = new Date(year, month, 1).getDay();
        const daysInMonth = new Date(year, month + 1, 0).getDate();

        let currentDay = 1;
        let row;

        for (let i = 0; i < 6; i++) {
            row = document.createElement("tr");

            for (let j = 0; j < 7; j++) {
                const cell = document.createElement("td");
                if (i === 0 && j < firstDay) {
                    cell.classList.add('empty');
                } else if (currentDay > daysInMonth) {
                    cell.classList.add('empty');
                } else {
                    cell.textContent = currentDay;

                    const today = new Date();
                    if (
                        currentDay === today.getDate() &&
                        month === today.getMonth() &&
                        year === today.getFullYear()
                    ) {
                        cell.classList.add("current-day");
                    }

                    currentDay++;
                }
                row.appendChild(cell);
            }
            table.appendChild(row);
            if (currentDay > daysInMonth) break;
        }

        const monthTitle = document.createElement("h3");
        monthTitle.textContent = monthNames[month] + " " + year;
        calendar.appendChild(monthTitle);
        calendar.appendChild(table);
    }

    function updateCalendar() {
        const monthSelect = document.getElementById("monthSelect");
        const yearSelect = document.getElementById("yearSelect");

        currentMonth = parseInt(monthSelect.value);
        currentYear = parseInt(yearSelect.value);
        generateCalendar(currentYear, currentMonth);
    }

    // Function to move to the previous month
    function prevMonth() {
        currentMonth--;
        if (currentMonth < 0) {
            currentMonth = 11;
            currentYear--;
        }
        updateCalendarSelectors();
        generateCalendar(currentYear, currentMonth);
    }

    // Function to move to the next month
    function nextMonth() {
        currentMonth++;
        if (currentMonth > 11) {
            currentMonth = 0;
            currentYear++;
        }
        updateCalendarSelectors();
        generateCalendar(currentYear, currentMonth);
    }

    // Update the month and year selectors when month changes
    function updateCalendarSelectors() {
        const monthSelect = document.getElementById("monthSelect");
        const yearSelect = document.getElementById("yearSelect");

        monthSelect.value = currentMonth;
        yearSelect.value = currentYear;
    }

    function populateDateSelectors() {
        const monthSelect = document.getElementById("monthSelect");
        const yearSelect = document.getElementById("yearSelect");

        for (let i = 0; i < 12; i++) {
            const option = document.createElement("option");
            option.value = i;
            option.textContent = i + 1;
            monthSelect.appendChild(option);
        }

        const currentYear = new Date().getFullYear();
        for (let i = currentYear - 10; i <= currentYear + 10; i++) {
            const option = document.createElement("option");
            option.value = i;
            option.textContent = i;
            yearSelect.appendChild(option);
        }

        monthSelect.value = new Date().getMonth();
        yearSelect.value = currentYear;

        generateCalendar(currentYear, currentMonth);
    }

    populateDateSelectors();
</script>
